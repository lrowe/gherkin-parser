{
    "language": null, 
    "tags": {
        "index": 0, 
        "content": [
            "issue", 
            "already_fixed"
        ]
    }, 
    "title": {
        "content": "Issue #148: Substeps do not fail", 
        "index": 2
    }, 
    "description": {
        "index": 4, 
        "content": "FIXED-BY: issue\nRELATED-TO: issue"
    }, 
    "background": null, 
    "scenarios": [
        {
            "tags": {
                "index": 7, 
                "content": [
                    "setup"
                ]
            }, 
            "title": {
                "is_outline": false, 
                "content": "Setup", 
                "index": 8
            }, 
            "description": null, 
            "steps": [
                {
                    "title": {
                        "content": "a new working directory", 
                        "clause": "given", 
                        "index": 9
                    }, 
                    "table": null, 
                    "text": null
                }, 
                {
                    "title": {
                        "content": "a file named \"features/steps/passing_steps.py\" with:", 
                        "clause": "given", 
                        "index": 10
                    }, 
                    "table": null, 
                    "text": {
                        "index": 11, 
                        "content": "@step('a step passes')\ndef step_passes(context):\n    pass\n\n@step('a step fails')\ndef step_fails(context):\n    assert False, \"XFAIL\""
                    }
                }, 
                {
                    "title": {
                        "content": "a file named \"features/issue0148_example.feature\" with:", 
                        "clause": "given", 
                        "index": 20
                    }, 
                    "table": null, 
                    "text": {
                        "index": 21, 
                        "content": "Feature: Sub steps\n\n  @xfail\n  Scenario: Failing test without substeps\n    Given a step passes\n    When a step fails\n    Then a step passes\n\n  @xfail\n  Scenario: Failing test with substeps\n    Given a step passes\n    When I do something with stupid substeps\n    Then a step passes"
                    }
                }
            ], 
            "examples": null
        }, 
        {
            "tags": null, 
            "title": {
                "is_outline": false, 
                "content": "Missing Step Keywords in Substeps", 
                "index": 37
            }, 
            "description": null, 
            "steps": [
                {
                    "title": {
                        "content": "a file named \"features/steps/substeps.py\" with:", 
                        "clause": "given", 
                        "index": 38
                    }, 
                    "table": null, 
                    "text": {
                        "index": 39, 
                        "content": "@When('I do something with stupid substeps')\ndef step(context):\n    context.execute_steps(u'''\n        I do something stupid\n        there is a second stupid step\n    ''')  # Given/When/Then keywords are missing in substeps above."
                    }
                }, 
                {
                    "title": {
                        "content": "I run \"behave -f plain -T features/issue0148_example.feature\"", 
                        "clause": "when", 
                        "index": 47
                    }, 
                    "table": null, 
                    "text": null
                }, 
                {
                    "title": {
                        "content": "it should fail with:", 
                        "clause": "then", 
                        "index": 48
                    }, 
                    "table": null, 
                    "text": {
                        "index": 49, 
                        "content": "0 features passed, 1 failed, 0 skipped\n0 scenarios passed, 2 failed, 0 skipped\n2 steps passed, 2 failed, 2 skipped, 0 undefined"
                    }
                }, 
                {
                    "title": {
                        "content": "the command output should contain:", 
                        "clause": "then", 
                        "index": 54
                    }, 
                    "table": null, 
                    "text": {
                        "index": 55, 
                        "content": "Scenario: Failing test without substeps\n  Given a step passes ... passed\n  When a step fails ... failed"
                    }
                }, 
                {
                    "title": {
                        "content": "the command output should contain:", 
                        "clause": "then", 
                        "index": 60
                    }, 
                    "table": null, 
                    "text": {
                        "index": 61, 
                        "content": "Scenario: Failing test with substeps\n  Given a step passes ... passed\n  When I do something with stupid substeps ... failed"
                    }
                }, 
                {
                    "title": {
                        "content": "the command output should contain:", 
                        "clause": "then", 
                        "index": 66
                    }, 
                    "table": null, 
                    "text": {
                        "index": 67, 
                        "content": "ParserError: Failed to parse <string>:\nParser failure in state steps, at line 2: 'I do something stupid'"
                    }
                }
            ], 
            "examples": null
        }, 
        {
            "tags": null, 
            "title": {
                "is_outline": false, 
                "content": "Use Step Keywords in Substeps", 
                "index": 73
            }, 
            "description": null, 
            "steps": [
                {
                    "title": {
                        "content": "a file named \"features/steps/substeps.py\" with:", 
                        "clause": "given", 
                        "index": 74
                    }, 
                    "table": null, 
                    "text": {
                        "index": 75, 
                        "content": "@when('I do something with stupid substeps')\ndef step(context):\n    context.execute_steps(u'''\n        When a step fails\n        Then a step fails\n    ''')"
                    }
                }, 
                {
                    "title": {
                        "content": "I run \"behave -f plain -T features/issue0148_example.feature\"", 
                        "clause": "when", 
                        "index": 83
                    }, 
                    "table": null, 
                    "text": null
                }, 
                {
                    "title": {
                        "content": "it should fail with:", 
                        "clause": "then", 
                        "index": 84
                    }, 
                    "table": null, 
                    "text": {
                        "index": 85, 
                        "content": "0 features passed, 1 failed, 0 skipped\n0 scenarios passed, 2 failed, 0 skipped\n2 steps passed, 2 failed, 2 skipped, 0 undefined"
                    }
                }, 
                {
                    "title": {
                        "content": "the command output should contain:", 
                        "clause": "then", 
                        "index": 90
                    }, 
                    "table": null, 
                    "text": {
                        "index": 91, 
                        "content": "Scenario: Failing test with substeps\n  Given a step passes ... passed\n  When I do something with stupid substeps ... failed\n  Assertion Failed: FAILED SUB-STEP: When a step fails\n  Substep info: Assertion Failed: XFAIL"
                    }
                }, 
                {
                    "title": {
                        "content": "the command output should not contain:", 
                        "clause": "then", 
                        "index": 98
                    }, 
                    "table": null, 
                    "text": {
                        "index": 99, 
                        "content": "\nParserError: Failed to parse <string>"
                    }
                }
            ], 
            "examples": null
        }
    ]
}